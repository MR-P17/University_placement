#include<bits/stdc++.h>
using namespace std;
void fast() {std::ios::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);}
#define ll long long
#define pb push_back
#define mp1 make_pair
#define ff first
#define ss second
#define vi vector<int>
#define vii vector< pair<int,int> >
#define map map<ll int,ll int>
#define vll vector< pair<long long,long long> > 
#define ve vector<ll int>
#define clr(x) memset(x, 0, sizeof(x))
#define loop(x,a,b) for(x=a;x<b;x++)
#define rloop(x,a,b) for(x=a;x>=b;x--)
#define itr for(std::map<ll int,ll int>::iterator it=mp.begin(); it!=mp.end(); ++it)
const int mod=1e9+7;
const int maxn=1e6+5;
int main()
{
	ios_base::sync_with_stdio(false);cin.tie(NULL); cout.tie(NULL);
	freopen("input.txt", "r", stdin);freopen("output.txt", "w", stdout);
	ll int a,b,c,d,i,j,sum=0,cnt=0,r=0;
	cin >> a;
	loop(i,0,a)
	{
		cin >> b;
		ll int s[b],s1[b],v[b],v1[b],dp[b],dp1[b];
		loop(j,0,b)
		{
			cin >> s[j];
		}
		loop(j,0,b)
		{
			cin >> s1[j];
		}
		loop(j,0,b-1)
		{
			cin >> v[j];
		}
		loop(j,0,b-1)
		{
			cin >> v1[j];
		}
		dp[0]=s[0];
		r=1;
		//cout << dp[0] << endl;
		loop(j,1,b)
		{
			if(r==1)
			{
				dp[j]=min(dp[j-1]+s[j],dp[j-1]+v[j-1]+s1[j]);
				//cout << dp[j] << endl;
				if(dp[j-1]+v[j-1]+s1[j]<dp[j-1]+s[j])
				{
					r=2;
				}
				else
				{
					r=1;
				}
			}
			else if(r==2)
			{
				dp[j]=min(dp[j-1]+s1[j],dp[j-1]+v1[j-1]+s[j]);
				//cout << dp[j] << endl;
				if(dp[j-1]+v1[j-1]+s[j]<=dp[j-1]+s1[j])
				{
					r=1;
				}
				else
				{
					r=2;
				}
			}
		}
		dp1[0]=s1[0];
		r=2;
		//cout << dp1[0] << endl;
		loop(j,1,b)
		{
			if(r==1)
			{
				dp1[j]=min(dp1[j-1]+s1[j],dp1[j-1]+v1[j-1]+s[j]);
				//cout << dp1[j] << endl;
				if(dp1[j-1]+v1[j-1]+s[j]<=dp1[j-1]+s1[j])
				{
					r=2;
				}
				else
				{
					r=1;
				}
			}
			else if(r==2)
			{
				dp1[j]=min(dp1[j-1]+s1[j],dp1[j-1]+v1[j-1]+s[j]);
				//cout << dp1[j] << endl;
				if(dp1[j-1]+v1[j-1]+s[j]<dp1[j-1]+s1[j])
				{
					r=1;
				}
				else
				{
					r=2;
				}
			}
		}
		cout << min(dp1[b-1],dp[b-1]) << endl;
	}
}